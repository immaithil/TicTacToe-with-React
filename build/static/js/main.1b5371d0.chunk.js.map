{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","helper.js","index.js"],"names":["Square","value","onClick","style","className","Board","squares","map","square","i","Game","useState","Array","fill","history","setHistory","setpNumber","setStepNumber","xIsNext","setXisNext","winner","lines","length","a","b","c","calculateWinner","xO","historyPoint","slice","current","_step","move","destination","step","ReactDOM","render","document","getElementById"],"mappings":"2LAYeA,EAVA,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QACdC,EAAOF,EAAK,kBAAcA,GAAd,UAElB,OACI,wBAAQC,QAAUA,EAASE,UAAYD,EAAvC,SACGF,KCIKI,EAPF,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASJ,EAAX,EAAWA,QAAX,OACV,qBAAKE,UAAU,QAAf,SACKE,EAAQC,KAAI,SAACC,EAAOC,GAAR,OACT,cAAC,EAAD,CAAgBR,MAAOO,EAAQN,QAAS,kBAAKA,EAAQO,KAAxCA,SCFzB,IAmDeC,EAnDF,WACT,MAA8BC,mBAAS,CAACC,MAAM,GAAGC,KAAK,QAAtD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA6BN,oBAAS,GAAtC,mBAAOO,EAAP,KAAgBC,EAAhB,KACMC,ECTH,SAAyBd,GAW5B,IAVA,IAAMe,EAAM,CACR,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAEAZ,EAAG,EAAEA,EAAEY,EAAMC,OAAOb,IAAI,CAC7B,kBAAeY,EAAMZ,GAArB,GAAOc,EAAP,KAASC,EAAT,KAAWC,EAAX,KACA,GAAGnB,EAAQiB,IAAMjB,EAAQiB,KAAKjB,EAAQkB,IAAMlB,EAAQiB,KAAKjB,EAAQmB,GAC7D,OAAOnB,EAAQiB,GAGvB,OAAO,KDRQG,CAAgBZ,EAAQE,IACjCW,EAAKT,EAAS,IAAK,IA4BzB,OACI,qCACI,mDAGA,cAAC,EAAD,CAAOZ,QAAUQ,EAAQE,GAAad,QA/B3B,SAACO,GAChB,IAAMmB,EAAed,EAAQe,MAAM,EAAGb,EAAY,GAC5Cc,EAAUF,EAAaZ,GACvBV,EAAQ,YAAIwB,GAEfV,GAAUd,EAAQG,KAErBH,EAAQG,GAAIkB,EACZZ,EAAW,GAAD,mBAAKa,GAAL,CAAkBtB,KAC5BW,EAAcW,EAAaN,QAC3BH,GAAYD,OAsBR,sBAAKd,UAAU,eAAf,UACI,gCACA,yCAjBcU,EAAQP,KAAI,SAACwB,EAAMC,GACzC,IAAMC,EAAcD,EAAK,eAAD,OAAiBA,GAAjB,cACxB,OACI,6BACI,wBAAQ9B,QAAU,kBAR1Be,EADWiB,EAS2BF,QAPtCb,EAAWe,EAAK,IAAK,GAFX,IAACA,GASH,SAAsCD,KADjCD,SAkBT,mCAAMZ,EAAQ,UAAWA,EAAS,eAAgBO,YE7C9DQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1b5371d0.chunk.js","sourcesContent":["import React from 'react';\r\n \r\nconst Square = ({value, onClick}) => {\r\n    const style= value ? `squares ${value}`:`squares`\r\n\r\n    return (\r\n        <button onClick= {onClick} className= {style}>\r\n          {value}  \r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Square;","import React from 'react';\r\n \r\nimport Square from './Square';\r\n\r\nconst Board = ({squares, onClick}) =>(\r\n    <div className='board'>\r\n        {squares.map((square,i)=>(\r\n            <Square key={i} value={square} onClick={()=> onClick(i)}/>\r\n        ))}\r\n    </div>\r\n)\r\n export default Board;","import React, {useState} from 'react';\r\n\r\nimport Board from './Board';\r\nimport { calculateWinner } from '../helper';\r\n\r\nconst Game = () =>{\r\n    const [history, setHistory] = useState([Array(9).fill(null)]);\r\n    const [setpNumber, setStepNumber] = useState(0);\r\n    const [xIsNext, setXisNext]= useState(true);\r\n    const winner = calculateWinner(history[setpNumber])\r\n    const xO = xIsNext? \"x\": 'o';\r\n\r\n    const handleClick= (i) =>{\r\n        const historyPoint = history.slice(0, setpNumber +1);\r\n        const current = historyPoint[setpNumber];\r\n        const squares=[...current];\r\n        //return if won or occupied\r\n        if(winner || squares[i]) return;\r\n        // select square\r\n        squares[i] =xO;\r\n        setHistory([...historyPoint,squares]);\r\n        setStepNumber(historyPoint.length)\r\n        setXisNext(!xIsNext); \r\n    }\r\n    const jumpTo= (step) =>{\r\n        setStepNumber(step);\r\n        setXisNext(step%2 ===0);\r\n    }\r\n\r\n    const renderMoves = () => history.map((_step,move)=>{\r\n        const destination = move? `Go to move #${move}`: `Go to start`;\r\n        return (\r\n            <li key={move}>\r\n                <button onClick= {()=> jumpTo(move)}>{destination}</button>\r\n            </li>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <>\r\n            <h1>\r\n                React Tic Tac Toe\r\n            </h1>\r\n            <Board squares= {history[setpNumber]} onClick={handleClick} />\r\n            <div className='info-wrapper'>\r\n                <div>\r\n                <h3>History</h3>\r\n                {renderMoves()}\r\n\r\n                </div>\r\n            <h3> {winner? \"Winner \" +winner : 'Next Player ' +xO }</h3>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Game","export function calculateWinner(squares){\r\n    const lines=[\r\n        [0,1,2],\r\n        [3,4,5],\r\n        [6,7,8],\r\n        [0,3,6],\r\n        [1,4,7],\r\n        [2,5,8],\r\n        [0,4,8],\r\n        [2,4,6]\r\n    ];\r\n    for (let i =0;i<lines.length;i++){\r\n        const [a,b,c ]=lines[i];\r\n        if(squares[a] && squares[a]===squares[b] && squares[a]===squares[c]){\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './components/Game';\n\nReactDOM.render(<Game/>, document.getElementById('root'));"],"sourceRoot":""}